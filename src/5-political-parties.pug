---
layout: page.md
permalink: "| political-parties/"
order: 5
title: Political parties
description: Want to know whether political parties in Antwerp actually support their statements? Now you can. Complete with articles.
stylesheet: /style/political-parties.css
---
mixin tagbutton(type, id, title=false)
    - if (!title) { title = id };
    button(name=type, value=id).tag=title

- 
    const allParties = { ...parties.flanders, ...parties.netherlands};

    function filterParties(condition) {
        Object.keys(allParties).forEach((partyId) => {
            if (condition(allParties[partyId])) {
                delete allParties[partyId]
            } 
        });
    }

    // Filter out parties with no configuration
    filterParties((party)=> {return party == null});

    let maxScale = {};

    Object.keys(parties.articles).forEach((sourceId) => {
        console.log(sourceId)
        const source = parties.articles[sourceId];
        console.log(source)

        source.forEach((entry) => {
            const partyIds = Object.keys(entry).filter(key => key != "url" && key != "subjects" && key != "description" && key != "note" && key != "year");
            partyIds.forEach((partyId) => {
                if (!Object.hasOwn(allParties[partyId], "points")) {
                    allParties[partyId].points = 0;
                    maxScale[partyId] = 0;
                }

                allParties[partyId].points += entry[partyId].value;
                maxScale[partyId] += 3;
            });
        });
    });

    // Filter out parties with no points/articles
    filterParties((party)=> {return !Object.hasOwn(party, "points")});


main#main
    h1 Political parties
    section#scale
        h2 Scale
        each classname in ["desktop", "mobile"]
            div(class=classname)
                each party in allParties
                    - 
                        let px;
                        let value;
                        if (party.points >= 0) {
                            console.log(party.points)
                            console.log(maxScale[party.id])
                            console.log(party.name)
                            value = party.points / maxScale[party.id] * 100  //50 - (100/maxScale - party.points)

                            from = classname == "desktop" ? "right" : "bottom";
                        } else {
                            let points = party.points * -1;
                            value = points / maxScale[party.id] * 100;  //50 - (100/maxScale - party.points)
                            from = classname == "desktop" ? "left" : "top";
                            //left = party.points / maxScale * 100  //50 - (100/maxScale - party.points)
                            //left = 50 + (100/maxScale - points)

                        }
                        
                    if party.name
                        //svg.party(style="left: " + left + "%")
                        img.party(title=party.name style=from + ": " + value + "%" src=`/assets/parties/${party.id}.svg` alt=`${party.name} logo`)

    section
        h2 Scoring system
        p Dependant on whether the party is in line with our values, the score will be added or subtracted.
        ul
            each score in Object.keys(parties.scale)
                li +/-#{score}:
                    ul
                        each description in parties.scale[score]
                            li=description



        h2 Considered articles

        fieldset#tags
            legend Tags


            each tag in parties.subjects 
                +tagbutton("subject", tag)
            
            each party in allParties
                +tagbutton("party", party.id, party.name)



        section#articles
            each source in parties.articles
                each article in source
                    - const involvedParties = Object.keys(article).filter(key => key != "url" && key != "subjects" && key != "description"&& key != "note" && key != "year");
                    - const allTags =involvedParties.concat(article.subjects).join(",");
                    article(data-tags=allTags)
                        -
                            let description = article.description;
                            if (article.year) {
                                article.description = `${article.description} (${article.year})`
                            }
                        h3=article.description
                        if article.note
                            p Note: #{article.note}

                        h4 Party scores
                        ul
                            each party in involvedParties
                                +tagbutton("party", party, `${party}: ${article[party].value}, ${article[party].note}`)

                        h4 Tags
                        ul
                            each subject in article.subjects
                                +tagbutton("subject", subject)
                        a(href=article.url)=article.url
    script(src="/scripts/political-parties.js")