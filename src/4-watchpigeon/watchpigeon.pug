---
layout: base.pug
stylesheet: /style/political-parties.css
pagination:
    data: areas
    alias: watchId
    size: 1
eleventyComputed:
    permalink: "| watchpigeon/#{watchId}/index.html"
    title: "| Watchpigeon - #{watchId}"
    description: "| Want to know whether political parties in #{watchId} actually support their statements? Now you can. Complete with articles."
---
- const area = watchpigeonData[watchId]

mixin tagbutton(type, id, title=false)
    - if (!title) { title = id };
    button(name=type, value=id).tag=title


main
    script(src="/vendor/nouislider.min.js")
    link(rel="stylesheet" href="/vendor/nouislider.min.css")
    h1
        nav(aria-label="breadcrumb")
            ul
                li
                    a(href="/watchpigeon/") Watchpigeon
                li
                    a(href="#")=watchId
    section#scale
        h2 Scale
        div(type="range" id="input-scale")

    br
    
    section
        h2 Scoring system
        p Dependant on whether the party is in line with our values, the score will be added or subtracted.
        ul
            li +/- 1
                ol
                    li (+) Supported with leeway
                    li (-) Opposes with leeway
            li +/- 2
                ol
                    li (+) Peddled by members and/or website
                    li (-) Horrible stuff peddled by members and/or website
            li +/-3
                ol
                    li (+) Active campaign point, support proven through external sources, pushes rights forwards
                    li (-) Negative active campaign point, opposition proven through external sources, pushes rights backwards
        h2 Considered articles

        fieldset#tags
            legend Tags

            each subject in AFAWatchpigeonSubjects
                +tagbutton("subject", subject.id, subject.name)
            
            hr

            each party in area.relevantParties
                +tagbutton("party", party.id, party.name)

            hr


        section#articles
            each article in area.relevantArticles
                -
                    const involvedPartyIds = article.responses.map(response => response.party.id)
                    const involvedParties = area.relevantParties.filter((party) => involvedPartyIds.includes(party.id));
                    const involvedSubjects = article.subjects.map(subject => subject.AFAWatchpigeonSubjects_id)
                    const allTags =involvedParties.map(party => party.id).concat(involvedSubjects.map(subject => subject.id)).join(",");
                article(data-tags=allTags)
                    header
                        h3 #{article.title} (#{article.year})
                    if article.note
                        p Note: #{article.note}

                    h4 Party scores
                    ul.party-scores
                        each party, i in involvedParties
                            - const response = article.responses.find(response => response.party.id == party.id);
                            li
                                hgroup
                                    h5
                                        img(aria-hidden=true src="/assets/" + party.logo.filename_download)
                                        span=party.name
                                    p Score: #{response.score}
                                p=response.note
                                if i < involvedParties.length-1
                                    hr

                    footer
                        h4 Tags
                        ul
                            each party in involvedParties
                                +tagbutton("party", party.id, party.name)
                            each subject in involvedSubjects
                                +tagbutton("subject", subject.id, subject.name)
                        
                        ul
                            each source in article.sources
                                li
                                    a(href=source.url)=source.name

    script let parties = '!{JSON.stringify(area.percentages)}';
    script(src="/scripts/political-parties.js")